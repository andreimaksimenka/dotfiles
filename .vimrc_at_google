" Google-specific plugins.
source /usr/share/vim/google/google.vim
source /usr/share/vim/google/gtags.vim

Glug alert
Glug autogen
Glug blaze plugin[mappings]=',b'
Glug blazedeps
Glug codefmt plugin[mappings]
Glug codefmt-google
Glug corpweb plugin[mappings]=',w'
Glug coverage
Glug coverage-google !plugin[autocmds]
Glug critique
Glug easygoogle
Glug fileswitch plugin[mappings]=',f'
Glug findinc
Glug git5
Glug google-filetypes fold_filetypes+=blazebuild
Glug google-logo blue=lightblue
Glug googlepaths
Glug grok
Glug outline-window
Glug relatedfiles plugin[mappings]=',r'
Glug syntastic-google
Glug ultisnips-google
Glug whitespace highlight
Glug youcompleteme-google

autocmd FileType bzl AutoFormatBuffer buildifier
" augroup autoformat_settings
"   autocmd FileType bzl AutoFormatBuffer buildifier
"   autocmd FileType c,cpp,proto,javascript AutoFormatBuffer clang-format
"   autocmd FileType java AutoFormatBuffer google-java-format
"   autocmd FileType jslayout AutoFormatBuffer jslfmt
"   autocmd FileType go AutoFormatBuffer gofmt
"   autocmd FileType python AutoFormatBuffer pyformat
"   autocmd FileType markdown AutoFormatBuffer mdformat
" augroup END

" Init easygoogle.
call easygoogle#rc()

:Glaive codefmt clang_format_style='file'

" Key bindings for Google-specific plugins.
nnoremap ,o :GoogleOutlineWindow<cr>
nnoremap ,gd  :<c-u>GrokDef<cr><cr>:lr<cr>
nnoremap ,gr  :<c-u>GrokRef<cr><cr>:lr<cr>
map ,cf :pyf /google/data/ro/users/kr/kramerb/include_fixer/clang-include-fixer.py<cr>
