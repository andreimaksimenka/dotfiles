# C-b is not acceptable -- Vim uses it.
set-option -g prefix C-a

# Quickly switch between the current window and the last window that was
# active.
bind-key C-a last-window

# Reload the file with Prefix r.
bind r source-file ~/.tmux.conf \; display "Reloaded!"

source-file ~/.tmux_line.conf

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# smart pane switching with awareness of Vim splits.
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Vi mode for moving around the buffer in copy mode.
setw -g mode-keys vi

# Set the default terminal mode to 256color mode.
set -g default-terminal "screen-256color"

# Enable activity alerts.
setw -g monitor-activity on
set -g visual-activity on

# Set the title of the current window to be more descriptive for the entire tmux session.
set -g set-titles on
set -g set-titles-string '#H:#S.#I.#P #W #T' # window number, program name, active(or not)

# Splitting windows and pane navigation using more intuitive keys.
unbind % #
bind | split-window -h
bind - split-window -v

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind a send-prefix

# Vi style copy(yank)-paste.
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Start window and pane numbering at 1.
set -g base-index 1
setw -g pane-base-index 1

# Set the delay so that it doesn't interfere with applications like
# Vim.
set -sg escape-time 0

# Set the scrollback.
set -g history-limit 200000

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Set the status line's colors.
set -g status-fg white
set -g status-bg black

# Set the color of the window list.
setw -g window-status-fg cyan
setw -g window-status-bg black

# Set colors for the active window.
setw -g window-status-current-fg white
setw -g window-status-current-bg red

# Set pane colors.
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# Command / message line.
set -g message-fg white
set -g message-bg black

# Status line left side.
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S"

# Status line right side 28 Nov 18:15.
set -g status-right "#[fg=green]%d %b %R"

# Update the status bar every sixty seconds.
set -g status-interval 60

# Center the window list.
set -g status-justify centre

# Highlight active window.
setw -g window-status-current-bg red

# Automatic window rename.
set -g automatic-rename on

# Restore sessions for vim.
set -g @resurrect-strategy-vim 'session'

# Restore bash history.
#set -g @resurrect-save-bash-history 'on'

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-open           \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-yank           \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
